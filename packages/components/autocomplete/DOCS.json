{
  "Autocomplete": {
    "animation": {
      "type": "\"top\" | \"right\" | \"bottom\" | \"left\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the list element will be closed when value is selected."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps<\"div\">, \"children\">",
      "required": false,
      "description": "Props for autocomplete container element."
    },
    "createOption": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, enables the creation of autocomplete options."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultValue": {
      "type": "string",
      "required": false,
      "description": "The initial value of the autocomplete."
    },
    "duration": {
      "type": "number | Partial<Record<\"enter\" | \"exit\", number>>",
      "required": false,
      "description": "The animation duration."
    },
    "emptyMessage": {
      "type": "string",
      "defaultValue": "'No results found'",
      "required": false,
      "description": "The message displayed when the search yields no hits."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "format": {
      "type": "(value: string) => string",
      "required": false,
      "description": "Function to format text when search input."
    },
    "gutter": {
      "type": "type ONLY_FOR_FORMAT =\n  | number\n  | ResponsiveObject<number>\n  | ColorModeArray<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "iconProps": {
      "type": "AutocompleteIconProps",
      "required": false,
      "description": "Props for autocomplete icon element."
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for autocomplete input element."
    },
    "insertPositionOnCreate": {
      "type": "Union<\"first\" | \"last\"> | [string, \"first\" | \"last\"]",
      "defaultValue": "'first'",
      "required": false,
      "description": "The position to be inserted when the autocomplete option is created."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "listProps": {
      "type": "Omit<AutocompleteListProps, \"children\">",
      "required": false,
      "description": "Props for autocomplete list element."
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass."
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "onChange": {
      "type": "(value: string) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onCreate": {
      "type": "(newOption: UIOption, newOptions: UIOption[]) => void",
      "required": false,
      "description": "The callback invoked when autocomlete option created."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "onSearch": {
      "type": "(ev: ChangeEvent<HTMLInputElement>) => void",
      "required": false,
      "description": "The callback invoked when search input."
    },
    "optionProps": {
      "type": "Omit<AutocompleteOptionProps, \"value\" | \"children\">",
      "required": false,
      "description": "Props for select option element."
    },
    "options": {
      "type": "UIOption[]",
      "required": false,
      "description": "If provided, generate options based on data."
    },
    "placement": {
      "type": "type ONLY_FOR_FORMAT =\n  | Placement\n  | ResponsiveObject<Placement>\n  | ColorModeArray<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "value": {
      "type": "string",
      "required": false,
      "description": "The value of the autocomplete."
    }
  },
  "AutocompleteOptionGroup": {
    "label": {
      "type": "string",
      "required": true,
      "description": "The label of the autocomplete option group."
    }
  },
  "AutocompleteOption": {
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the list element will be closed when selected."
    },
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The autocomplete option icon to use."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the select option will be disabled."
    },
    "isFocusable": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the select option will be focusable."
    },
    "value": {
      "type": "string",
      "required": false,
      "description": "The value of the select option."
    }
  },
  "AutocompleteCreate": {
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The autocomplete create option icon to use."
    }
  },
  "AutocompleteEmpty": {
    "icon": {
      "type": "ReactElement<any, string | JSXElementConstructor<any>>",
      "required": false,
      "description": "The autocomplete empty option icon to use."
    }
  },
  "MultiAutocomplete": {
    "animation": {
      "type": "\"top\" | \"right\" | \"bottom\" | \"left\" | \"scale\" | \"none\"",
      "defaultValue": "'scale'",
      "required": false,
      "description": "The animation of the popover."
    },
    "boundary": {
      "type": "HTMLElement | \"clippingParents\" | \"scrollParent\"",
      "defaultValue": "'clippingParents'",
      "required": false,
      "description": "The boundary area for the popper. Used within the `preventOverflow` modifier."
    },
    "clearIconProps": {
      "type": "AutocompleteIconProps",
      "required": false,
      "description": "Props for multi autocomplete clear icon element."
    },
    "closeOnBlur": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you blur out it by clicking outside or tabbing out."
    },
    "closeOnEsc": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popover will close when you hit the `Esc` key."
    },
    "closeOnSelect": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the list element will be closed when value is selected."
    },
    "component": {
      "type": "FC<{\n  value: string | number\n  displayValue: string\n  index: number\n  onRemove: MouseEventHandler<HTMLElement>\n}>",
      "required": false,
      "description": "The custom display value to use."
    },
    "containerProps": {
      "type": "Omit<HTMLUIProps<\"div\">, \"children\">",
      "required": false,
      "description": "Props for multi autocomplete container element."
    },
    "createOption": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, enables the creation of autocomplete options."
    },
    "defaultIsOpen": {
      "type": "boolean",
      "required": false,
      "description": "If `true`, the popover will be initially opened."
    },
    "defaultValue": {
      "type": "string[]",
      "required": false,
      "description": "The initial value of the autocomplete."
    },
    "duration": {
      "type": "number | Partial<Record<\"enter\" | \"exit\", number>>",
      "required": false,
      "description": "The animation duration."
    },
    "emptyMessage": {
      "type": "string",
      "defaultValue": "'No results found'",
      "required": false,
      "description": "The message displayed when the search yields no hits."
    },
    "errorBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is invalid."
    },
    "eventListeners": {
      "type": "type ONLY_FOR_FORMAT =\n  | boolean\n  | { scroll?: boolean | undefined; resize?: boolean | undefined }",
      "defaultValue": true,
      "required": false,
      "description": "If provided, determines whether the popper will reposition itself on `scroll`  and `resize` of the window."
    },
    "flip": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, the popper will change its placement and flip when it's about to overflow its boundary area."
    },
    "focusBorderColor": {
      "type": "string",
      "required": false,
      "description": "The border color when the input is focused."
    },
    "format": {
      "type": "(value: string) => string",
      "required": false,
      "description": "Function to format text when search input."
    },
    "gutter": {
      "type": "type ONLY_FOR_FORMAT =\n  | number\n  | ResponsiveObject<number>\n  | ColorModeArray<number>",
      "defaultValue": "8",
      "required": false,
      "description": "The distance or margin between the reference and popper.\nIt is used internally to create an `offset` modifier."
    },
    "iconProps": {
      "type": "AutocompleteIconProps",
      "required": false,
      "description": "Props for multi autocomplete icon element."
    },
    "inputProps": {
      "type": "HTMLUIProps<\"input\">",
      "required": false,
      "description": "Props for multi autocomplete input element."
    },
    "insertPositionOnCreate": {
      "type": "Union<\"first\" | \"last\"> | [string, \"first\" | \"last\"]",
      "defaultValue": "'first'",
      "required": false,
      "description": "The position to be inserted when the autocomplete option is created."
    },
    "isClearable": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, display the select clear icon."
    },
    "isDisabled": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be disabled."
    },
    "isInvalid": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be invalid."
    },
    "isLazy": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the PopoverContent rendering will be deferred until the popover is open."
    },
    "isReadOnly": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be readonly."
    },
    "isRequired": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the form control will be required."
    },
    "keepPlaceholder": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, keep the placeholder."
    },
    "lazyBehavior": {
      "type": "LazyMode",
      "defaultValue": "'unmount'",
      "required": false,
      "description": "The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n\n- `unmount`: The popover's content is always unmounted when not open.\n- `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open."
    },
    "listProps": {
      "type": "Omit<AutocompleteListProps, \"children\">",
      "required": false,
      "description": "Props for multi autocomplete list element."
    },
    "matchWidth": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the popper will match the width of the reference at all times.\nIt's useful for `autocomplete`, `date-picker` and `select` patterns."
    },
    "maxSelectedValues": {
      "type": "number",
      "required": false,
      "description": "The maximum selectable value."
    },
    "modifiers": {
      "type": "Partial<Modifier<string, any>>[]",
      "required": false,
      "description": "Array of popper.js modifiers.\nCheck the docs to see the list of possible modifiers you can pass."
    },
    "offset": {
      "type": "[number, number]",
      "required": false,
      "description": "The main and cross-axis offset to displace popper element from its reference element."
    },
    "omitSelectedValues": {
      "type": "boolean",
      "defaultValue": false,
      "required": false,
      "description": "If `true`, the selected item(s) will be excluded from the list."
    },
    "onChange": {
      "type": "(value: string[]) => void",
      "required": false,
      "description": "The callback invoked when value state changes."
    },
    "onClose": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover closes."
    },
    "onCreate": {
      "type": "(newOption: UIOption, newOptions: UIOption[]) => void",
      "required": false,
      "description": "The callback invoked when autocomlete option created."
    },
    "onOpen": {
      "type": "() => void",
      "required": false,
      "description": "Callback fired when the popover opens."
    },
    "onSearch": {
      "type": "(ev: ChangeEvent<HTMLInputElement>) => void",
      "required": false,
      "description": "The callback invoked when search input."
    },
    "optionProps": {
      "type": "Omit<AutocompleteOptionProps, \"value\" | \"children\">",
      "required": false,
      "description": "Props for select option element."
    },
    "options": {
      "type": "UIOption[]",
      "required": false,
      "description": "If provided, generate options based on data."
    },
    "placement": {
      "type": "type ONLY_FOR_FORMAT =\n  | Placement\n  | ResponsiveObject<Placement>\n  | ColorModeArray<Placement>",
      "defaultValue": "'bottom'",
      "required": false,
      "description": "The placement of the popper relative to its reference."
    },
    "preventOverflow": {
      "type": "boolean",
      "defaultValue": true,
      "required": false,
      "description": "If `true`, will prevent the popper from being cut off and ensure it's visible within the boundary area."
    },
    "separator": {
      "type": "string",
      "defaultValue": "','",
      "required": false,
      "description": "The visual separator between each value."
    },
    "strategy": {
      "type": "\"fixed\" | \"absolute\"",
      "defaultValue": "'absolute'",
      "required": false,
      "description": "The CSS positioning strategy to use."
    },
    "value": {
      "type": "string[]",
      "required": false,
      "description": "The value of the autocomplete."
    }
  }
}
